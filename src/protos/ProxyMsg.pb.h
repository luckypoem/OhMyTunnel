// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProxyMsg.proto

#ifndef PROTOBUF_ProxyMsg_2eproto__INCLUDED
#define PROTOBUF_ProxyMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace proxy {
namespace msg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ProxyMsg_2eproto();
void protobuf_AssignDesc_ProxyMsg_2eproto();
void protobuf_ShutdownFile_ProxyMsg_2eproto();

class ProxyConnectReq;
class ProxyConnectRsp;
class ProxyMsg;

enum BIG_CMD {
  ServerCmd = 1280
};
bool BIG_CMD_IsValid(int value);
const BIG_CMD BIG_CMD_MIN = ServerCmd;
const BIG_CMD BIG_CMD_MAX = ServerCmd;
const int BIG_CMD_ARRAYSIZE = BIG_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* BIG_CMD_descriptor();
inline const ::std::string& BIG_CMD_Name(BIG_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    BIG_CMD_descriptor(), value);
}
inline bool BIG_CMD_Parse(
    const ::std::string& name, BIG_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BIG_CMD>(
    BIG_CMD_descriptor(), name, value);
}
enum SUB_CMD {
  SubCmd0x1 = 1,
  SubCmd0x2 = 2
};
bool SUB_CMD_IsValid(int value);
const SUB_CMD SUB_CMD_MIN = SubCmd0x1;
const SUB_CMD SUB_CMD_MAX = SubCmd0x2;
const int SUB_CMD_ARRAYSIZE = SUB_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* SUB_CMD_descriptor();
inline const ::std::string& SUB_CMD_Name(SUB_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    SUB_CMD_descriptor(), value);
}
inline bool SUB_CMD_Parse(
    const ::std::string& name, SUB_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SUB_CMD>(
    SUB_CMD_descriptor(), name, value);
}
// ===================================================================

class ProxyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proxy.msg.ProxyMsg) */ {
 public:
  ProxyMsg();
  virtual ~ProxyMsg();

  ProxyMsg(const ProxyMsg& from);

  inline ProxyMsg& operator=(const ProxyMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyMsg& default_instance();

  void Swap(ProxyMsg* other);

  // implements Message ----------------------------------------------

  inline ProxyMsg* New() const { return New(NULL); }

  ProxyMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyMsg& from);
  void MergeFrom(const ProxyMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProxyMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes place_holder = 1;
  bool has_place_holder() const;
  void clear_place_holder();
  static const int kPlaceHolderFieldNumber = 1;
  const ::std::string& place_holder() const;
  void set_place_holder(const ::std::string& value);
  void set_place_holder(const char* value);
  void set_place_holder(const void* value, size_t size);
  ::std::string* mutable_place_holder();
  ::std::string* release_place_holder();
  void set_allocated_place_holder(::std::string* place_holder);

  // optional uint32 check_sum = 2;
  bool has_check_sum() const;
  void clear_check_sum();
  static const int kCheckSumFieldNumber = 2;
  ::google::protobuf::uint32 check_sum() const;
  void set_check_sum(::google::protobuf::uint32 value);

  // optional uint32 cmd = 3;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 3;
  ::google::protobuf::uint32 cmd() const;
  void set_cmd(::google::protobuf::uint32 value);

  // optional uint32 subcmd = 4;
  bool has_subcmd() const;
  void clear_subcmd();
  static const int kSubcmdFieldNumber = 4;
  ::google::protobuf::uint32 subcmd() const;
  void set_subcmd(::google::protobuf::uint32 value);

  // optional uint32 seq = 5;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 5;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // required uint32 err_code = 6;
  bool has_err_code() const;
  void clear_err_code();
  static const int kErrCodeFieldNumber = 6;
  ::google::protobuf::uint32 err_code() const;
  void set_err_code(::google::protobuf::uint32 value);

  // optional bytes body = 10;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 10;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:proxy.msg.ProxyMsg)
 private:
  inline void set_has_place_holder();
  inline void clear_has_place_holder();
  inline void set_has_check_sum();
  inline void clear_has_check_sum();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_subcmd();
  inline void clear_has_subcmd();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_err_code();
  inline void clear_has_err_code();
  inline void set_has_body();
  inline void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr place_holder_;
  ::google::protobuf::uint32 check_sum_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 subcmd_;
  ::google::protobuf::uint32 seq_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::uint32 err_code_;
  friend void  protobuf_AddDesc_ProxyMsg_2eproto();
  friend void protobuf_AssignDesc_ProxyMsg_2eproto();
  friend void protobuf_ShutdownFile_ProxyMsg_2eproto();

  void InitAsDefaultInstance();
  static ProxyMsg* default_instance_;
};
// -------------------------------------------------------------------

class ProxyConnectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proxy.msg.ProxyConnectReq) */ {
 public:
  ProxyConnectReq();
  virtual ~ProxyConnectReq();

  ProxyConnectReq(const ProxyConnectReq& from);

  inline ProxyConnectReq& operator=(const ProxyConnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyConnectReq& default_instance();

  void Swap(ProxyConnectReq* other);

  // implements Message ----------------------------------------------

  inline ProxyConnectReq* New() const { return New(NULL); }

  ProxyConnectReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyConnectReq& from);
  void MergeFrom(const ProxyConnectReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProxyConnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional string address = 2;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional uint32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // optional string username = 4;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 4;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string password = 5;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 5;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:proxy.msg.ProxyConnectReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend void  protobuf_AddDesc_ProxyMsg_2eproto();
  friend void protobuf_AssignDesc_ProxyMsg_2eproto();
  friend void protobuf_ShutdownFile_ProxyMsg_2eproto();

  void InitAsDefaultInstance();
  static ProxyConnectReq* default_instance_;
};
// -------------------------------------------------------------------

class ProxyConnectRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proxy.msg.ProxyConnectRsp) */ {
 public:
  ProxyConnectRsp();
  virtual ~ProxyConnectRsp();

  ProxyConnectRsp(const ProxyConnectRsp& from);

  inline ProxyConnectRsp& operator=(const ProxyConnectRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyConnectRsp& default_instance();

  void Swap(ProxyConnectRsp* other);

  // implements Message ----------------------------------------------

  inline ProxyConnectRsp* New() const { return New(NULL); }

  ProxyConnectRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProxyConnectRsp& from);
  void MergeFrom(const ProxyConnectRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProxyConnectRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proxy.msg.ProxyConnectRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_ProxyMsg_2eproto();
  friend void protobuf_AssignDesc_ProxyMsg_2eproto();
  friend void protobuf_ShutdownFile_ProxyMsg_2eproto();

  void InitAsDefaultInstance();
  static ProxyConnectRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyMsg

// optional bytes place_holder = 1;
inline bool ProxyMsg::has_place_holder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProxyMsg::set_has_place_holder() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProxyMsg::clear_has_place_holder() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProxyMsg::clear_place_holder() {
  place_holder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_place_holder();
}
inline const ::std::string& ProxyMsg::place_holder() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.place_holder)
  return place_holder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyMsg::set_place_holder(const ::std::string& value) {
  set_has_place_holder();
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.place_holder)
}
inline void ProxyMsg::set_place_holder(const char* value) {
  set_has_place_holder();
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyMsg.place_holder)
}
inline void ProxyMsg::set_place_holder(const void* value, size_t size) {
  set_has_place_holder();
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyMsg.place_holder)
}
inline ::std::string* ProxyMsg::mutable_place_holder() {
  set_has_place_holder();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyMsg.place_holder)
  return place_holder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyMsg::release_place_holder() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyMsg.place_holder)
  clear_has_place_holder();
  return place_holder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyMsg::set_allocated_place_holder(::std::string* place_holder) {
  if (place_holder != NULL) {
    set_has_place_holder();
  } else {
    clear_has_place_holder();
  }
  place_holder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), place_holder);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyMsg.place_holder)
}

// optional uint32 check_sum = 2;
inline bool ProxyMsg::has_check_sum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProxyMsg::set_has_check_sum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProxyMsg::clear_has_check_sum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProxyMsg::clear_check_sum() {
  check_sum_ = 0u;
  clear_has_check_sum();
}
inline ::google::protobuf::uint32 ProxyMsg::check_sum() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.check_sum)
  return check_sum_;
}
inline void ProxyMsg::set_check_sum(::google::protobuf::uint32 value) {
  set_has_check_sum();
  check_sum_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.check_sum)
}

// optional uint32 cmd = 3;
inline bool ProxyMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProxyMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProxyMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProxyMsg::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 ProxyMsg::cmd() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.cmd)
  return cmd_;
}
inline void ProxyMsg::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.cmd)
}

// optional uint32 subcmd = 4;
inline bool ProxyMsg::has_subcmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProxyMsg::set_has_subcmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProxyMsg::clear_has_subcmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProxyMsg::clear_subcmd() {
  subcmd_ = 0u;
  clear_has_subcmd();
}
inline ::google::protobuf::uint32 ProxyMsg::subcmd() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.subcmd)
  return subcmd_;
}
inline void ProxyMsg::set_subcmd(::google::protobuf::uint32 value) {
  set_has_subcmd();
  subcmd_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.subcmd)
}

// optional uint32 seq = 5;
inline bool ProxyMsg::has_seq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProxyMsg::set_has_seq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProxyMsg::clear_has_seq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProxyMsg::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 ProxyMsg::seq() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.seq)
  return seq_;
}
inline void ProxyMsg::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.seq)
}

// required uint32 err_code = 6;
inline bool ProxyMsg::has_err_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ProxyMsg::set_has_err_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ProxyMsg::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ProxyMsg::clear_err_code() {
  err_code_ = 0u;
  clear_has_err_code();
}
inline ::google::protobuf::uint32 ProxyMsg::err_code() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.err_code)
  return err_code_;
}
inline void ProxyMsg::set_err_code(::google::protobuf::uint32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.err_code)
}

// optional bytes body = 10;
inline bool ProxyMsg::has_body() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ProxyMsg::set_has_body() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ProxyMsg::clear_has_body() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ProxyMsg::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& ProxyMsg::body() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyMsg::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.body)
}
inline void ProxyMsg::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyMsg.body)
}
inline void ProxyMsg::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyMsg.body)
}
inline ::std::string* ProxyMsg::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyMsg.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyMsg::release_body() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyMsg.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyMsg::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyMsg.body)
}

// -------------------------------------------------------------------

// ProxyConnectReq

// optional uint32 type = 1;
inline bool ProxyConnectReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProxyConnectReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProxyConnectReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProxyConnectReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ProxyConnectReq::type() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.type)
  return type_;
}
inline void ProxyConnectReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.type)
}

// optional string address = 2;
inline bool ProxyConnectReq::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProxyConnectReq::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProxyConnectReq::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProxyConnectReq::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& ProxyConnectReq::address() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConnectReq::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.address)
}
inline void ProxyConnectReq::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyConnectReq.address)
}
inline void ProxyConnectReq::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyConnectReq.address)
}
inline ::std::string* ProxyConnectReq::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyConnectReq.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConnectReq::release_address() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyConnectReq.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConnectReq::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyConnectReq.address)
}

// optional uint32 port = 3;
inline bool ProxyConnectReq::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProxyConnectReq::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProxyConnectReq::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProxyConnectReq::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 ProxyConnectReq::port() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.port)
  return port_;
}
inline void ProxyConnectReq::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.port)
}

// optional string username = 4;
inline bool ProxyConnectReq::has_username() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProxyConnectReq::set_has_username() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProxyConnectReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProxyConnectReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& ProxyConnectReq::username() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConnectReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.username)
}
inline void ProxyConnectReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyConnectReq.username)
}
inline void ProxyConnectReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyConnectReq.username)
}
inline ::std::string* ProxyConnectReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyConnectReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConnectReq::release_username() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyConnectReq.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConnectReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyConnectReq.username)
}

// optional string password = 5;
inline bool ProxyConnectReq::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProxyConnectReq::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProxyConnectReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProxyConnectReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& ProxyConnectReq::password() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConnectReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.password)
}
inline void ProxyConnectReq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyConnectReq.password)
}
inline void ProxyConnectReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyConnectReq.password)
}
inline ::std::string* ProxyConnectReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyConnectReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConnectReq::release_password() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyConnectReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConnectReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyConnectReq.password)
}

// -------------------------------------------------------------------

// ProxyConnectRsp

// required uint32 result = 1;
inline bool ProxyConnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProxyConnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProxyConnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProxyConnectRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 ProxyConnectRsp::result() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectRsp.result)
  return result_;
}
inline void ProxyConnectRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectRsp.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace proxy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proxy::msg::BIG_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proxy::msg::BIG_CMD>() {
  return ::proxy::msg::BIG_CMD_descriptor();
}
template <> struct is_proto_enum< ::proxy::msg::SUB_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proxy::msg::SUB_CMD>() {
  return ::proxy::msg::SUB_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProxyMsg_2eproto__INCLUDED
