// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProxyMsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProxyMsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proxy {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* ProxyMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyConnectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyConnectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProxyConnectRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProxyConnectRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BIG_CMD_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SUB_CMD_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProxyMsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ProxyMsg_2eproto() {
  protobuf_AddDesc_ProxyMsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProxyMsg.proto");
  GOOGLE_CHECK(file != NULL);
  ProxyMsg_descriptor_ = file->message_type(0);
  static const int ProxyMsg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, place_holder_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, check_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, subcmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, err_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, body_),
  };
  ProxyMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProxyMsg_descriptor_,
      ProxyMsg::default_instance_,
      ProxyMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(ProxyMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyMsg, _internal_metadata_),
      -1);
  ProxyConnectReq_descriptor_ = file->message_type(1);
  static const int ProxyConnectReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectReq, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectReq, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectReq, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectReq, password_),
  };
  ProxyConnectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProxyConnectReq_descriptor_,
      ProxyConnectReq::default_instance_,
      ProxyConnectReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(ProxyConnectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectReq, _internal_metadata_),
      -1);
  ProxyConnectRsp_descriptor_ = file->message_type(2);
  static const int ProxyConnectRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectRsp, result_),
  };
  ProxyConnectRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProxyConnectRsp_descriptor_,
      ProxyConnectRsp::default_instance_,
      ProxyConnectRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectRsp, _has_bits_[0]),
      -1,
      -1,
      sizeof(ProxyConnectRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProxyConnectRsp, _internal_metadata_),
      -1);
  BIG_CMD_descriptor_ = file->enum_type(0);
  SUB_CMD_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProxyMsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProxyMsg_descriptor_, &ProxyMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProxyConnectReq_descriptor_, &ProxyConnectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProxyConnectRsp_descriptor_, &ProxyConnectRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProxyMsg_2eproto() {
  delete ProxyMsg::default_instance_;
  delete ProxyMsg_reflection_;
  delete ProxyConnectReq::default_instance_;
  delete ProxyConnectReq_reflection_;
  delete ProxyConnectRsp::default_instance_;
  delete ProxyConnectRsp_reflection_;
}

void protobuf_AddDesc_ProxyMsg_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ProxyMsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016ProxyMsg.proto\022\tproxy.msg\"}\n\010ProxyMsg\022"
    "\024\n\014place_holder\030\001 \001(\014\022\021\n\tcheck_sum\030\002 \001(\r"
    "\022\013\n\003cmd\030\003 \001(\r\022\016\n\006subcmd\030\004 \001(\r\022\013\n\003seq\030\005 \001"
    "(\r\022\020\n\010err_code\030\006 \002(\r\022\014\n\004body\030\n \001(\014\"b\n\017Pr"
    "oxyConnectReq\022\014\n\004type\030\001 \001(\r\022\017\n\007address\030\002"
    " \001(\t\022\014\n\004port\030\003 \001(\r\022\020\n\010username\030\004 \001(\t\022\020\n\010"
    "password\030\005 \001(\t\"!\n\017ProxyConnectRsp\022\016\n\006res"
    "ult\030\001 \002(\r*\031\n\007BIG_CMD\022\016\n\tServerCmd\020\200\n*\'\n\007"
    "SUB_CMD\022\r\n\tSubCmd0x1\020\001\022\r\n\tSubCmd0x2\020\002", 357);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProxyMsg.proto", &protobuf_RegisterTypes);
  ProxyMsg::default_instance_ = new ProxyMsg();
  ProxyConnectReq::default_instance_ = new ProxyConnectReq();
  ProxyConnectRsp::default_instance_ = new ProxyConnectRsp();
  ProxyMsg::default_instance_->InitAsDefaultInstance();
  ProxyConnectReq::default_instance_->InitAsDefaultInstance();
  ProxyConnectRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProxyMsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProxyMsg_2eproto {
  StaticDescriptorInitializer_ProxyMsg_2eproto() {
    protobuf_AddDesc_ProxyMsg_2eproto();
  }
} static_descriptor_initializer_ProxyMsg_2eproto_;
const ::google::protobuf::EnumDescriptor* BIG_CMD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BIG_CMD_descriptor_;
}
bool BIG_CMD_IsValid(int value) {
  switch(value) {
    case 1280:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SUB_CMD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SUB_CMD_descriptor_;
}
bool SUB_CMD_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyMsg::kPlaceHolderFieldNumber;
const int ProxyMsg::kCheckSumFieldNumber;
const int ProxyMsg::kCmdFieldNumber;
const int ProxyMsg::kSubcmdFieldNumber;
const int ProxyMsg::kSeqFieldNumber;
const int ProxyMsg::kErrCodeFieldNumber;
const int ProxyMsg::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyMsg::ProxyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proxy.msg.ProxyMsg)
}

void ProxyMsg::InitAsDefaultInstance() {
}

ProxyMsg::ProxyMsg(const ProxyMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proxy.msg.ProxyMsg)
}

void ProxyMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  place_holder_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_sum_ = 0u;
  cmd_ = 0u;
  subcmd_ = 0u;
  seq_ = 0u;
  err_code_ = 0u;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyMsg::~ProxyMsg() {
  // @@protoc_insertion_point(destructor:proxy.msg.ProxyMsg)
  SharedDtor();
}

void ProxyMsg::SharedDtor() {
  place_holder_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ProxyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyMsg_descriptor_;
}

const ProxyMsg& ProxyMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProxyMsg_2eproto();
  return *default_instance_;
}

ProxyMsg* ProxyMsg::default_instance_ = NULL;

ProxyMsg* ProxyMsg::New(::google::protobuf::Arena* arena) const {
  ProxyMsg* n = new ProxyMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:proxy.msg.ProxyMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProxyMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProxyMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(check_sum_, seq_);
    if (has_place_holder()) {
      place_holder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    err_code_ = 0u;
    if (has_body()) {
      body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ProxyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proxy.msg.ProxyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes place_holder = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_place_holder()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_check_sum;
        break;
      }

      // optional uint32 check_sum = 2;
      case 2: {
        if (tag == 16) {
         parse_check_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &check_sum_)));
          set_has_check_sum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cmd;
        break;
      }

      // optional uint32 cmd = 3;
      case 3: {
        if (tag == 24) {
         parse_cmd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_subcmd;
        break;
      }

      // optional uint32 subcmd = 4;
      case 4: {
        if (tag == 32) {
         parse_subcmd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subcmd_)));
          set_has_subcmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_seq;
        break;
      }

      // optional uint32 seq = 5;
      case 5: {
        if (tag == 40) {
         parse_seq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
          set_has_seq();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_err_code;
        break;
      }

      // required uint32 err_code = 6;
      case 6: {
        if (tag == 48) {
         parse_err_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &err_code_)));
          set_has_err_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_body;
        break;
      }

      // optional bytes body = 10;
      case 10: {
        if (tag == 82) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proxy.msg.ProxyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proxy.msg.ProxyMsg)
  return false;
#undef DO_
}

void ProxyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proxy.msg.ProxyMsg)
  // optional bytes place_holder = 1;
  if (has_place_holder()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->place_holder(), output);
  }

  // optional uint32 check_sum = 2;
  if (has_check_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->check_sum(), output);
  }

  // optional uint32 cmd = 3;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cmd(), output);
  }

  // optional uint32 subcmd = 4;
  if (has_subcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->subcmd(), output);
  }

  // optional uint32 seq = 5;
  if (has_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->seq(), output);
  }

  // required uint32 err_code = 6;
  if (has_err_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->err_code(), output);
  }

  // optional bytes body = 10;
  if (has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proxy.msg.ProxyMsg)
}

::google::protobuf::uint8* ProxyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proxy.msg.ProxyMsg)
  // optional bytes place_holder = 1;
  if (has_place_holder()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->place_holder(), target);
  }

  // optional uint32 check_sum = 2;
  if (has_check_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->check_sum(), target);
  }

  // optional uint32 cmd = 3;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cmd(), target);
  }

  // optional uint32 subcmd = 4;
  if (has_subcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->subcmd(), target);
  }

  // optional uint32 seq = 5;
  if (has_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->seq(), target);
  }

  // required uint32 err_code = 6;
  if (has_err_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->err_code(), target);
  }

  // optional bytes body = 10;
  if (has_body()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proxy.msg.ProxyMsg)
  return target;
}

int ProxyMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proxy.msg.ProxyMsg)
  int total_size = 0;

  // required uint32 err_code = 6;
  if (has_err_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->err_code());
  }
  if (_has_bits_[0 / 32] & 95u) {
    // optional bytes place_holder = 1;
    if (has_place_holder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->place_holder());
    }

    // optional uint32 check_sum = 2;
    if (has_check_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->check_sum());
    }

    // optional uint32 cmd = 3;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cmd());
    }

    // optional uint32 subcmd = 4;
    if (has_subcmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->subcmd());
    }

    // optional uint32 seq = 5;
    if (has_seq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seq());
    }

    // optional bytes body = 10;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proxy.msg.ProxyMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProxyMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProxyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proxy.msg.ProxyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proxy.msg.ProxyMsg)
    MergeFrom(*source);
  }
}

void ProxyMsg::MergeFrom(const ProxyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proxy.msg.ProxyMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_place_holder()) {
      set_has_place_holder();
      place_holder_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.place_holder_);
    }
    if (from.has_check_sum()) {
      set_check_sum(from.check_sum());
    }
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_subcmd()) {
      set_subcmd(from.subcmd());
    }
    if (from.has_seq()) {
      set_seq(from.seq());
    }
    if (from.has_err_code()) {
      set_err_code(from.err_code());
    }
    if (from.has_body()) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ProxyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proxy.msg.ProxyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyMsg::CopyFrom(const ProxyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proxy.msg.ProxyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;

  return true;
}

void ProxyMsg::Swap(ProxyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyMsg::InternalSwap(ProxyMsg* other) {
  place_holder_.Swap(&other->place_holder_);
  std::swap(check_sum_, other->check_sum_);
  std::swap(cmd_, other->cmd_);
  std::swap(subcmd_, other->subcmd_);
  std::swap(seq_, other->seq_);
  std::swap(err_code_, other->err_code_);
  body_.Swap(&other->body_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProxyMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyMsg_descriptor_;
  metadata.reflection = ProxyMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyMsg

// optional bytes place_holder = 1;
bool ProxyMsg::has_place_holder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProxyMsg::set_has_place_holder() {
  _has_bits_[0] |= 0x00000001u;
}
void ProxyMsg::clear_has_place_holder() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProxyMsg::clear_place_holder() {
  place_holder_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_place_holder();
}
 const ::std::string& ProxyMsg::place_holder() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.place_holder)
  return place_holder_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyMsg::set_place_holder(const ::std::string& value) {
  set_has_place_holder();
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.place_holder)
}
 void ProxyMsg::set_place_holder(const char* value) {
  set_has_place_holder();
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyMsg.place_holder)
}
 void ProxyMsg::set_place_holder(const void* value, size_t size) {
  set_has_place_holder();
  place_holder_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyMsg.place_holder)
}
 ::std::string* ProxyMsg::mutable_place_holder() {
  set_has_place_holder();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyMsg.place_holder)
  return place_holder_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProxyMsg::release_place_holder() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyMsg.place_holder)
  clear_has_place_holder();
  return place_holder_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyMsg::set_allocated_place_holder(::std::string* place_holder) {
  if (place_holder != NULL) {
    set_has_place_holder();
  } else {
    clear_has_place_holder();
  }
  place_holder_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), place_holder);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyMsg.place_holder)
}

// optional uint32 check_sum = 2;
bool ProxyMsg::has_check_sum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProxyMsg::set_has_check_sum() {
  _has_bits_[0] |= 0x00000002u;
}
void ProxyMsg::clear_has_check_sum() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProxyMsg::clear_check_sum() {
  check_sum_ = 0u;
  clear_has_check_sum();
}
 ::google::protobuf::uint32 ProxyMsg::check_sum() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.check_sum)
  return check_sum_;
}
 void ProxyMsg::set_check_sum(::google::protobuf::uint32 value) {
  set_has_check_sum();
  check_sum_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.check_sum)
}

// optional uint32 cmd = 3;
bool ProxyMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProxyMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
void ProxyMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProxyMsg::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
 ::google::protobuf::uint32 ProxyMsg::cmd() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.cmd)
  return cmd_;
}
 void ProxyMsg::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.cmd)
}

// optional uint32 subcmd = 4;
bool ProxyMsg::has_subcmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProxyMsg::set_has_subcmd() {
  _has_bits_[0] |= 0x00000008u;
}
void ProxyMsg::clear_has_subcmd() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProxyMsg::clear_subcmd() {
  subcmd_ = 0u;
  clear_has_subcmd();
}
 ::google::protobuf::uint32 ProxyMsg::subcmd() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.subcmd)
  return subcmd_;
}
 void ProxyMsg::set_subcmd(::google::protobuf::uint32 value) {
  set_has_subcmd();
  subcmd_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.subcmd)
}

// optional uint32 seq = 5;
bool ProxyMsg::has_seq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ProxyMsg::set_has_seq() {
  _has_bits_[0] |= 0x00000010u;
}
void ProxyMsg::clear_has_seq() {
  _has_bits_[0] &= ~0x00000010u;
}
void ProxyMsg::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
 ::google::protobuf::uint32 ProxyMsg::seq() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.seq)
  return seq_;
}
 void ProxyMsg::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.seq)
}

// required uint32 err_code = 6;
bool ProxyMsg::has_err_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ProxyMsg::set_has_err_code() {
  _has_bits_[0] |= 0x00000020u;
}
void ProxyMsg::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000020u;
}
void ProxyMsg::clear_err_code() {
  err_code_ = 0u;
  clear_has_err_code();
}
 ::google::protobuf::uint32 ProxyMsg::err_code() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.err_code)
  return err_code_;
}
 void ProxyMsg::set_err_code(::google::protobuf::uint32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.err_code)
}

// optional bytes body = 10;
bool ProxyMsg::has_body() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ProxyMsg::set_has_body() {
  _has_bits_[0] |= 0x00000040u;
}
void ProxyMsg::clear_has_body() {
  _has_bits_[0] &= ~0x00000040u;
}
void ProxyMsg::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
 const ::std::string& ProxyMsg::body() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyMsg.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyMsg::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyMsg.body)
}
 void ProxyMsg::set_body(const char* value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyMsg.body)
}
 void ProxyMsg::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyMsg.body)
}
 ::std::string* ProxyMsg::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyMsg.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProxyMsg::release_body() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyMsg.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyMsg::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyMsg.body)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyConnectReq::kTypeFieldNumber;
const int ProxyConnectReq::kAddressFieldNumber;
const int ProxyConnectReq::kPortFieldNumber;
const int ProxyConnectReq::kUsernameFieldNumber;
const int ProxyConnectReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyConnectReq::ProxyConnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proxy.msg.ProxyConnectReq)
}

void ProxyConnectReq::InitAsDefaultInstance() {
}

ProxyConnectReq::ProxyConnectReq(const ProxyConnectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proxy.msg.ProxyConnectReq)
}

void ProxyConnectReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0u;
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyConnectReq::~ProxyConnectReq() {
  // @@protoc_insertion_point(destructor:proxy.msg.ProxyConnectReq)
  SharedDtor();
}

void ProxyConnectReq::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ProxyConnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyConnectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyConnectReq_descriptor_;
}

const ProxyConnectReq& ProxyConnectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProxyMsg_2eproto();
  return *default_instance_;
}

ProxyConnectReq* ProxyConnectReq::default_instance_ = NULL;

ProxyConnectReq* ProxyConnectReq::New(::google::protobuf::Arena* arena) const {
  ProxyConnectReq* n = new ProxyConnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyConnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proxy.msg.ProxyConnectReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProxyConnectReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProxyConnectReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(type_, port_);
    if (has_address()) {
      address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ProxyConnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proxy.msg.ProxyConnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_address;
        break;
      }

      // optional string address = 2;
      case 2: {
        if (tag == 18) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proxy.msg.ProxyConnectReq.address");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_port;
        break;
      }

      // optional uint32 port = 3;
      case 3: {
        if (tag == 24) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_username;
        break;
      }

      // optional string username = 4;
      case 4: {
        if (tag == 34) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proxy.msg.ProxyConnectReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_password;
        break;
      }

      // optional string password = 5;
      case 5: {
        if (tag == 42) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proxy.msg.ProxyConnectReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proxy.msg.ProxyConnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proxy.msg.ProxyConnectReq)
  return false;
#undef DO_
}

void ProxyConnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proxy.msg.ProxyConnectReq)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string address = 2;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxy.msg.ProxyConnectReq.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // optional uint32 port = 3;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // optional string username = 4;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxy.msg.ProxyConnectReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->username(), output);
  }

  // optional string password = 5;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxy.msg.ProxyConnectReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proxy.msg.ProxyConnectReq)
}

::google::protobuf::uint8* ProxyConnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proxy.msg.ProxyConnectReq)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string address = 2;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxy.msg.ProxyConnectReq.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // optional uint32 port = 3;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // optional string username = 4;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxy.msg.ProxyConnectReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->username(), target);
  }

  // optional string password = 5;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proxy.msg.ProxyConnectReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proxy.msg.ProxyConnectReq)
  return target;
}

int ProxyConnectReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proxy.msg.ProxyConnectReq)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional string address = 2;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }

    // optional uint32 port = 3;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->port());
    }

    // optional string username = 4;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string password = 5;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyConnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proxy.msg.ProxyConnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProxyConnectReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProxyConnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proxy.msg.ProxyConnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proxy.msg.ProxyConnectReq)
    MergeFrom(*source);
  }
}

void ProxyConnectReq::MergeFrom(const ProxyConnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proxy.msg.ProxyConnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_address()) {
      set_has_address();
      address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
    }
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ProxyConnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proxy.msg.ProxyConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyConnectReq::CopyFrom(const ProxyConnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proxy.msg.ProxyConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyConnectReq::IsInitialized() const {

  return true;
}

void ProxyConnectReq::Swap(ProxyConnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyConnectReq::InternalSwap(ProxyConnectReq* other) {
  std::swap(type_, other->type_);
  address_.Swap(&other->address_);
  std::swap(port_, other->port_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProxyConnectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyConnectReq_descriptor_;
  metadata.reflection = ProxyConnectReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyConnectReq

// optional uint32 type = 1;
bool ProxyConnectReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProxyConnectReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ProxyConnectReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProxyConnectReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
 ::google::protobuf::uint32 ProxyConnectReq::type() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.type)
  return type_;
}
 void ProxyConnectReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.type)
}

// optional string address = 2;
bool ProxyConnectReq::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProxyConnectReq::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
void ProxyConnectReq::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProxyConnectReq::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
 const ::std::string& ProxyConnectReq::address() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyConnectReq::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.address)
}
 void ProxyConnectReq::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyConnectReq.address)
}
 void ProxyConnectReq::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyConnectReq.address)
}
 ::std::string* ProxyConnectReq::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyConnectReq.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProxyConnectReq::release_address() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyConnectReq.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyConnectReq::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyConnectReq.address)
}

// optional uint32 port = 3;
bool ProxyConnectReq::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ProxyConnectReq::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void ProxyConnectReq::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void ProxyConnectReq::clear_port() {
  port_ = 0u;
  clear_has_port();
}
 ::google::protobuf::uint32 ProxyConnectReq::port() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.port)
  return port_;
}
 void ProxyConnectReq::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.port)
}

// optional string username = 4;
bool ProxyConnectReq::has_username() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ProxyConnectReq::set_has_username() {
  _has_bits_[0] |= 0x00000008u;
}
void ProxyConnectReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000008u;
}
void ProxyConnectReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
 const ::std::string& ProxyConnectReq::username() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyConnectReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.username)
}
 void ProxyConnectReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyConnectReq.username)
}
 void ProxyConnectReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyConnectReq.username)
}
 ::std::string* ProxyConnectReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyConnectReq.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProxyConnectReq::release_username() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyConnectReq.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyConnectReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyConnectReq.username)
}

// optional string password = 5;
bool ProxyConnectReq::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ProxyConnectReq::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
void ProxyConnectReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
void ProxyConnectReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
 const ::std::string& ProxyConnectReq::password() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectReq.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyConnectReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectReq.password)
}
 void ProxyConnectReq::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proxy.msg.ProxyConnectReq.password)
}
 void ProxyConnectReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proxy.msg.ProxyConnectReq.password)
}
 ::std::string* ProxyConnectReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proxy.msg.ProxyConnectReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProxyConnectReq::release_password() {
  // @@protoc_insertion_point(field_release:proxy.msg.ProxyConnectReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProxyConnectReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proxy.msg.ProxyConnectReq.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyConnectRsp::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyConnectRsp::ProxyConnectRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:proxy.msg.ProxyConnectRsp)
}

void ProxyConnectRsp::InitAsDefaultInstance() {
}

ProxyConnectRsp::ProxyConnectRsp(const ProxyConnectRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:proxy.msg.ProxyConnectRsp)
}

void ProxyConnectRsp::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProxyConnectRsp::~ProxyConnectRsp() {
  // @@protoc_insertion_point(destructor:proxy.msg.ProxyConnectRsp)
  SharedDtor();
}

void ProxyConnectRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProxyConnectRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyConnectRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProxyConnectRsp_descriptor_;
}

const ProxyConnectRsp& ProxyConnectRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProxyMsg_2eproto();
  return *default_instance_;
}

ProxyConnectRsp* ProxyConnectRsp::default_instance_ = NULL;

ProxyConnectRsp* ProxyConnectRsp::New(::google::protobuf::Arena* arena) const {
  ProxyConnectRsp* n = new ProxyConnectRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyConnectRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proxy.msg.ProxyConnectRsp)
  result_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ProxyConnectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proxy.msg.ProxyConnectRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proxy.msg.ProxyConnectRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proxy.msg.ProxyConnectRsp)
  return false;
#undef DO_
}

void ProxyConnectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proxy.msg.ProxyConnectRsp)
  // required uint32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proxy.msg.ProxyConnectRsp)
}

::google::protobuf::uint8* ProxyConnectRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proxy.msg.ProxyConnectRsp)
  // required uint32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proxy.msg.ProxyConnectRsp)
  return target;
}

int ProxyConnectRsp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:proxy.msg.ProxyConnectRsp)
  int total_size = 0;

  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyConnectRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proxy.msg.ProxyConnectRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ProxyConnectRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ProxyConnectRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proxy.msg.ProxyConnectRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proxy.msg.ProxyConnectRsp)
    MergeFrom(*source);
  }
}

void ProxyConnectRsp::MergeFrom(const ProxyConnectRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proxy.msg.ProxyConnectRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ProxyConnectRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proxy.msg.ProxyConnectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyConnectRsp::CopyFrom(const ProxyConnectRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proxy.msg.ProxyConnectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyConnectRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ProxyConnectRsp::Swap(ProxyConnectRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyConnectRsp::InternalSwap(ProxyConnectRsp* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProxyConnectRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProxyConnectRsp_descriptor_;
  metadata.reflection = ProxyConnectRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProxyConnectRsp

// required uint32 result = 1;
bool ProxyConnectRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProxyConnectRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void ProxyConnectRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProxyConnectRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
 ::google::protobuf::uint32 ProxyConnectRsp::result() const {
  // @@protoc_insertion_point(field_get:proxy.msg.ProxyConnectRsp.result)
  return result_;
}
 void ProxyConnectRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proxy.msg.ProxyConnectRsp.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace proxy

// @@protoc_insertion_point(global_scope)
